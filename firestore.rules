rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Todo 데이터 유효성 검증 함수
    function isValidTodo(data) {
      return data.size() >= 5 &&
        'userId' in data && data.userId is string &&
        'title' in data && data.title is string && data.title.size() > 0 &&
        'completed' in data && data.completed is bool &&
        'createdAt' in data && data.createdAt is timestamp &&
        'updatedAt' in data && data.updatedAt is timestamp &&
        'priority' in data && data.priority in ['high', 'medium', 'low'];
    }

    // Users can only access their own user document
    match /users/{userId} {
      allow read, update, delete: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null && request.auth.uid == userId;
    }

    // Users can only access their own todos
    match /todos/{todoId} {
      allow read, delete: if request.auth != null && request.auth.uid == resource.data.userId;
      allow update: if request.auth != null && request.auth.uid == resource.data.userId && isValidTodo(request.resource.data);
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId && isValidTodo(request.resource.data);
    }

    // Deny all other documents
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
